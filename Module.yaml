version: 1.0.0
name: HTTP Egress
description: Send your data to a third party via HTTP
icon: https://icons-020-demo.s3.eu-central-1.amazonaws.com/mi_http_output.png
type: output
tags:
  - HTTP Egress
  - output
  - Send
  - data
  - third
  - party
  - http
categories:
  - id: category
    name: Egress
image:
  name: weevenetwork/http-egress
  tag: latest
environments:
  - key: EGRESS_WEBHOOK_URL
    description: Paste the HTTP address.
    value: ''
    default: http://www...
    type: string
    name: HTTP URL
  - key: METHOD
    description: HTTP ReST method (recommended POST).
    value: ''
    default: POST
    type: enum
    options:
      - POST
      - GET
    name: Method
  - key: CONTENT_TYPE_JSON
    description: Send JSON Content Type in Header of Request
    value: ''
    default: no
    type: enum
    options:
      - yes
      - no
    name: Content Type as JSON
  - key: LABELS
    description: List of comma (,) separated labels to read from a previous module. Leave empty ("") to keep all data.
    value: ''
    default: temperature, pressure
    type: string
    name: Input Labels
  - key: TIMESTAMP
    description: Label for timestamp field for incoming data. If left empty, this module will add the timestamp.
    value: ''
    default: 2 Aug 2021
    type: string
    name: Timestamp Field
  - key: AUTHENTICATION_REQUIRED
    description: Connection requires authentication via bearer token
    value: ''
    default: no
    type: enum
    options:
      - yes
      - no
    name: Authentiocation Bearer   
  - key: AUTHENTICATION_TOKEN
    description: Authentication token for authorization
    value: ''
    default: ''
    type: string
    name: Authentication token
  - key: AUTHENTICATION_API_KEY
    description: Authentication API key if required
    value: ''
    default: ''
    type: string
    name: Authentication API key
  - key: ERROR_URL
    description: URL for reporting error if request fails
    value: ''
    default: ''
    type: string
    name: Error reporting URL
commands: []
document:
  ports: []
  volumes: []
  restart_policy:
    condition: on-failure
    delay: 10s
    max_attempts: 3
    window: 120s
